// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class IotBaseModuleSettings
    {
        /// <summary>
        /// Initializes a new instance of the IotBaseModuleSettings class.
        /// </summary>
        public IotBaseModuleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IotBaseModuleSettings class.
        /// </summary>
        public IotBaseModuleSettings(string moduleName = default(string), IDictionary<string, string> propertiesDesired = default(IDictionary<string, string>), string createOptions = default(string), IDictionary<string, string> environmentVariables = default(IDictionary<string, string>))
        {
            ModuleName = moduleName;
            PropertiesDesired = propertiesDesired;
            CreateOptions = createOptions;
            EnvironmentVariables = environmentVariables;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "moduleName")]
        public string ModuleName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "propertiesDesired")]
        public IDictionary<string, string> PropertiesDesired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createOptions")]
        public string CreateOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "environmentVariables")]
        public IDictionary<string, string> EnvironmentVariables { get; set; }

    }
}
