// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Details of the Artifact Container's shared access signature.
    /// </summary>
    public partial class ArtifactContainerSas
    {
        /// <summary>
        /// Initializes a new instance of the ArtifactContainerSas class.
        /// </summary>
        public ArtifactContainerSas()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArtifactContainerSas class.
        /// </summary>
        /// <param name="containerSas">The shared access signature of the
        /// Container.</param>
        /// <param name="containerUri">The URI of the Container.</param>
        /// <param name="prefix">The Prefix to the Blobs in the
        /// Container.</param>
        /// <param name="artifactPrefix">The Prefix to the Artifact in the
        /// Blob.</param>
        public ArtifactContainerSas(string containerSas, string containerUri, string prefix = default(string), string artifactPrefix = default(string))
        {
            ContainerSas = containerSas;
            ContainerUri = containerUri;
            Prefix = prefix;
            ArtifactPrefix = artifactPrefix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the shared access signature of the Container.
        /// </summary>
        [JsonProperty(PropertyName = "containerSas")]
        public string ContainerSas { get; set; }

        /// <summary>
        /// Gets or sets the URI of the Container.
        /// </summary>
        [JsonProperty(PropertyName = "containerUri")]
        public string ContainerUri { get; set; }

        /// <summary>
        /// Gets or sets the Prefix to the Blobs in the Container.
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// Gets or sets the Prefix to the Artifact in the Blob.
        /// </summary>
        [JsonProperty(PropertyName = "artifactPrefix")]
        public string ArtifactPrefix { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ContainerSas == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContainerSas");
            }
            if (ContainerUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContainerUri");
            }
        }
    }
}
