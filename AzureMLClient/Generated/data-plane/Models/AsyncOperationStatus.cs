// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The async operation status.
    /// </summary>
    public partial class AsyncOperationStatus
    {
        /// <summary>
        /// Initializes a new instance of the AsyncOperationStatus class.
        /// </summary>
        public AsyncOperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AsyncOperationStatus class.
        /// </summary>
        /// <param name="id">The async operation id.</param>
        /// <param name="operationType">The async operation type.</param>
        /// <param name="state">The async operation state. Possible values
        /// include: 'NotStarted', 'Running', 'Cancelled', 'Succeeded',
        /// 'Failed', 'TimedOut'</param>
        /// <param name="createdTime">The async operation creation time
        /// (UTC).</param>
        /// <param name="endTime">The async operation end time (UTC)l</param>
        /// <param name="error">The error details.</param>
        /// <param name="resourceLocation">The resource created/updated by the
        /// async operation.</param>
        /// <param name="operationLog">The async operation log.</param>
        /// <param name="operationDetails">The async operation details.</param>
        /// <param name="parentRequestId">The request id that created this
        /// operation</param>
        public AsyncOperationStatus(string id = default(string), string operationType = default(string), AsyncOperationState? state = default(AsyncOperationState?), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), ModelErrorResponse error = default(ModelErrorResponse), string resourceLocation = default(string), string operationLog = default(string), AsyncOperationDetails operationDetails = default(AsyncOperationDetails), string parentRequestId = default(string))
        {
            Id = id;
            OperationType = operationType;
            State = state;
            CreatedTime = createdTime;
            EndTime = endTime;
            Error = error;
            ResourceLocation = resourceLocation;
            OperationLog = operationLog;
            OperationDetails = operationDetails;
            ParentRequestId = parentRequestId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the async operation id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the async operation type.
        /// </summary>
        [JsonProperty(PropertyName = "operationType")]
        public string OperationType { get; set; }

        /// <summary>
        /// Gets or sets the async operation state. Possible values include:
        /// 'NotStarted', 'Running', 'Cancelled', 'Succeeded', 'Failed',
        /// 'TimedOut'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public AsyncOperationState? State { get; set; }

        /// <summary>
        /// Gets or sets the async operation creation time (UTC).
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets the async operation end time (UTC)l
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets the error details.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ModelErrorResponse Error { get; set; }

        /// <summary>
        /// Gets or sets the resource created/updated by the async operation.
        /// </summary>
        [JsonProperty(PropertyName = "resourceLocation")]
        public string ResourceLocation { get; set; }

        /// <summary>
        /// Gets or sets the async operation log.
        /// </summary>
        [JsonProperty(PropertyName = "operationLog")]
        public string OperationLog { get; set; }

        /// <summary>
        /// Gets or sets the async operation details.
        /// </summary>
        [JsonProperty(PropertyName = "operationDetails")]
        public AsyncOperationDetails OperationDetails { get; set; }

        /// <summary>
        /// Gets or sets the request id that created this operation
        /// </summary>
        [JsonProperty(PropertyName = "parentRequestId")]
        public string ParentRequestId { get; set; }

    }
}
