// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Hyperparameter space and the sampling method configuration.
    /// </summary>
    public partial class HyperDriveExperimentBaseGeneratorConfig
    {
        /// <summary>
        /// Initializes a new instance of the
        /// HyperDriveExperimentBaseGeneratorConfig class.
        /// </summary>
        public HyperDriveExperimentBaseGeneratorConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// HyperDriveExperimentBaseGeneratorConfig class.
        /// </summary>
        /// <param name="name">Hyperparameter sampling method. Possible values
        /// include: 'RANDOM', 'GRID', 'BAYESIANOPTIMIZATION'</param>
        /// <param name="parameterSpace">Dictionary specifying hyperparameter
        /// space.</param>
        public HyperDriveExperimentBaseGeneratorConfig(string name, IDictionary<string, IList<object>> parameterSpace)
        {
            Name = name;
            ParameterSpace = parameterSpace;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets hyperparameter sampling method. Possible values
        /// include: 'RANDOM', 'GRID', 'BAYESIANOPTIMIZATION'
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets dictionary specifying hyperparameter space.
        /// </summary>
        [JsonProperty(PropertyName = "parameter_space")]
        public IDictionary<string, IList<object>> ParameterSpace { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (ParameterSpace == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ParameterSpace");
            }
        }
    }
}
