// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AzureStorage
    {
        /// <summary>
        /// Initializes a new instance of the AzureStorage class.
        /// </summary>
        public AzureStorage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureStorage class.
        /// </summary>
        /// <param name="accountName">Storage Account Name</param>
        /// <param name="containerName">The storage container name</param>
        /// <param name="endpoint">The host of the container</param>
        /// <param name="protocol">The protocol to use. Defaults to
        /// https</param>
        /// <param name="credentialType">The credential type. Possible values
        /// include: 'None', 'Sas', 'AccountKey', 'ClientCredentials'</param>
        /// <param name="credential">The credential</param>
        /// <param name="clientCredentials">Service principal credential when
        /// credential type is
        /// Microsoft.MachineLearning.DataStore.Contracts.AzureStorageCredentialTypes.ClientCredentials</param>
        /// <param name="blobCacheTimeout">If this is an
        /// Microsoft.MachineLearning.DataStore.Contracts.DataStoreType.AzureBlob,
        /// the length of time (in seconds) to cache files locally after they
        /// are accessed (downloaded).</param>
        /// <param name="isSas">Indicate if we are using SAS token or Account
        /// Key (Deprecated)</param>
        /// <param name="accountKey">Storage Account Key (Deprecated)</param>
        /// <param name="sasToken">SAS Token for the container
        /// (Deprecated)</param>
        /// <param name="areWorkspaceManagedIdentitiesAllowed">Indicate if we
        /// are using Workspace ManagedIdentities/MSI token</param>
        /// <param name="subscriptionId">Subscription Id</param>
        /// <param name="resourceGroup">Resource Group Name</param>
        public AzureStorage(string accountName = default(string), string containerName = default(string), string endpoint = default(string), string protocol = default(string), AzureStorageCredentialTypes? credentialType = default(AzureStorageCredentialTypes?), string credential = default(string), ClientCredentials clientCredentials = default(ClientCredentials), int? blobCacheTimeout = default(int?), bool? isSas = default(bool?), string accountKey = default(string), string sasToken = default(string), bool? areWorkspaceManagedIdentitiesAllowed = default(bool?), System.Guid? subscriptionId = default(System.Guid?), string resourceGroup = default(string))
        {
            AccountName = accountName;
            ContainerName = containerName;
            Endpoint = endpoint;
            Protocol = protocol;
            CredentialType = credentialType;
            Credential = credential;
            ClientCredentials = clientCredentials;
            BlobCacheTimeout = blobCacheTimeout;
            IsSas = isSas;
            AccountKey = accountKey;
            SasToken = sasToken;
            AreWorkspaceManagedIdentitiesAllowed = areWorkspaceManagedIdentitiesAllowed;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets storage Account Name
        /// </summary>
        [JsonProperty(PropertyName = "accountName")]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or sets the storage container name
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Gets or sets the host of the container
        /// </summary>
        [JsonProperty(PropertyName = "endpoint")]
        public string Endpoint { get; set; }

        /// <summary>
        /// Gets or sets the protocol to use. Defaults to https
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets or sets the credential type. Possible values include: 'None',
        /// 'Sas', 'AccountKey', 'ClientCredentials'
        /// </summary>
        [JsonProperty(PropertyName = "credentialType")]
        public AzureStorageCredentialTypes? CredentialType { get; set; }

        /// <summary>
        /// Gets or sets the credential
        /// </summary>
        [JsonProperty(PropertyName = "credential")]
        public string Credential { get; set; }

        /// <summary>
        /// Gets or sets service principal credential when credential type is
        /// Microsoft.MachineLearning.DataStore.Contracts.AzureStorageCredentialTypes.ClientCredentials
        /// </summary>
        [JsonProperty(PropertyName = "clientCredentials")]
        public ClientCredentials ClientCredentials { get; set; }

        /// <summary>
        /// Gets or sets if this is an
        /// Microsoft.MachineLearning.DataStore.Contracts.DataStoreType.AzureBlob,
        /// the length of time (in seconds) to cache files locally after they
        /// are accessed (downloaded).
        /// </summary>
        [JsonProperty(PropertyName = "blobCacheTimeout")]
        public int? BlobCacheTimeout { get; set; }

        /// <summary>
        /// Gets or sets indicate if we are using SAS token or Account Key
        /// (Deprecated)
        /// </summary>
        [JsonProperty(PropertyName = "isSas")]
        public bool? IsSas { get; set; }

        /// <summary>
        /// Gets or sets storage Account Key (Deprecated)
        /// </summary>
        [JsonProperty(PropertyName = "accountKey")]
        public string AccountKey { get; set; }

        /// <summary>
        /// Gets or sets SAS Token for the container (Deprecated)
        /// </summary>
        [JsonProperty(PropertyName = "sasToken")]
        public string SasToken { get; set; }

        /// <summary>
        /// Gets or sets indicate if we are using Workspace
        /// ManagedIdentities/MSI token
        /// </summary>
        [JsonProperty(PropertyName = "areWorkspaceManagedIdentitiesAllowed")]
        public bool? AreWorkspaceManagedIdentitiesAllowed { get; set; }

        /// <summary>
        /// Gets or sets subscription Id
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public System.Guid? SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets resource Group Name
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup { get; set; }

    }
}
