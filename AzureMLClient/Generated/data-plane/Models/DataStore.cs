// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DataStore
    {
        /// <summary>
        /// Initializes a new instance of the DataStore class.
        /// </summary>
        public DataStore()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataStore class.
        /// </summary>
        /// <param name="name">Name of the datastore</param>
        /// <param name="dataStoreType">The Azure storage service this
        /// datastore points to. Possible values include: 'AzureBlob',
        /// 'AzureFile', 'AzureDataLake', 'AzureSqlDatabase',
        /// 'AzurePostgreSql', 'DBFS', 'AzureDataLakeGen2', 'GlusterFs'</param>
        /// <param name="hasBeenValidated">A read only property that denotes
        /// whether the service datastore has been validated with
        /// credentials.</param>
        /// <param name="tags">Tags to datastore</param>
        /// <param name="azureStorageSection">Data specific to azure
        /// storage</param>
        /// <param name="azureDataLakeSection">Data Specific to azure data
        /// lake</param>
        /// <param name="azureSqlDatabaseSection">Data specific to azure SQL
        /// database</param>
        /// <param name="azurePostgreSqlSection">Data specific to azure
        /// PostgreSQL</param>
        /// <param name="glusterFsSection">Data specific to GlusterFS</param>
        public DataStore(string name = default(string), DataStoreType? dataStoreType = default(DataStoreType?), bool? hasBeenValidated = default(bool?), IDictionary<string, string> tags = default(IDictionary<string, string>), AzureStorage azureStorageSection = default(AzureStorage), AzureDataLake azureDataLakeSection = default(AzureDataLake), AzureSqlDatabase azureSqlDatabaseSection = default(AzureSqlDatabase), AzurePostgreSql azurePostgreSqlSection = default(AzurePostgreSql), GlusterFs glusterFsSection = default(GlusterFs))
        {
            Name = name;
            DataStoreType = dataStoreType;
            HasBeenValidated = hasBeenValidated;
            Tags = tags;
            AzureStorageSection = azureStorageSection;
            AzureDataLakeSection = azureDataLakeSection;
            AzureSqlDatabaseSection = azureSqlDatabaseSection;
            AzurePostgreSqlSection = azurePostgreSqlSection;
            GlusterFsSection = glusterFsSection;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the datastore
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the Azure storage service this datastore points to.
        /// Possible values include: 'AzureBlob', 'AzureFile', 'AzureDataLake',
        /// 'AzureSqlDatabase', 'AzurePostgreSql', 'DBFS', 'AzureDataLakeGen2',
        /// 'GlusterFs'
        /// </summary>
        [JsonProperty(PropertyName = "dataStoreType")]
        public DataStoreType? DataStoreType { get; set; }

        /// <summary>
        /// Gets or sets a read only property that denotes whether the service
        /// datastore has been validated with credentials.
        /// </summary>
        [JsonProperty(PropertyName = "hasBeenValidated")]
        public bool? HasBeenValidated { get; set; }

        /// <summary>
        /// Gets or sets tags to datastore
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets data specific to azure storage
        /// </summary>
        [JsonProperty(PropertyName = "azureStorageSection")]
        public AzureStorage AzureStorageSection { get; set; }

        /// <summary>
        /// Gets or sets data Specific to azure data lake
        /// </summary>
        [JsonProperty(PropertyName = "azureDataLakeSection")]
        public AzureDataLake AzureDataLakeSection { get; set; }

        /// <summary>
        /// Gets or sets data specific to azure SQL database
        /// </summary>
        [JsonProperty(PropertyName = "azureSqlDatabaseSection")]
        public AzureSqlDatabase AzureSqlDatabaseSection { get; set; }

        /// <summary>
        /// Gets or sets data specific to azure PostgreSQL
        /// </summary>
        [JsonProperty(PropertyName = "azurePostgreSqlSection")]
        public AzurePostgreSql AzurePostgreSqlSection { get; set; }

        /// <summary>
        /// Gets or sets data specific to GlusterFS
        /// </summary>
        [JsonProperty(PropertyName = "glusterFsSection")]
        public GlusterFs GlusterFsSection { get; set; }

    }
}
