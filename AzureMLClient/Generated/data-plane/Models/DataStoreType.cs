// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DataStoreType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DataStoreType
    {
        [EnumMember(Value = "AzureBlob")]
        AzureBlob,
        [EnumMember(Value = "AzureFile")]
        AzureFile,
        [EnumMember(Value = "AzureDataLake")]
        AzureDataLake,
        [EnumMember(Value = "AzureSqlDatabase")]
        AzureSqlDatabase,
        [EnumMember(Value = "AzurePostgreSql")]
        AzurePostgreSql,
        [EnumMember(Value = "DBFS")]
        DBFS,
        [EnumMember(Value = "AzureDataLakeGen2")]
        AzureDataLakeGen2,
        [EnumMember(Value = "GlusterFs")]
        GlusterFs
    }
    internal static class DataStoreTypeEnumExtension
    {
        internal static string ToSerializedValue(this DataStoreType? value)
        {
            return value == null ? null : ((DataStoreType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DataStoreType value)
        {
            switch( value )
            {
                case DataStoreType.AzureBlob:
                    return "AzureBlob";
                case DataStoreType.AzureFile:
                    return "AzureFile";
                case DataStoreType.AzureDataLake:
                    return "AzureDataLake";
                case DataStoreType.AzureSqlDatabase:
                    return "AzureSqlDatabase";
                case DataStoreType.AzurePostgreSql:
                    return "AzurePostgreSql";
                case DataStoreType.DBFS:
                    return "DBFS";
                case DataStoreType.AzureDataLakeGen2:
                    return "AzureDataLakeGen2";
                case DataStoreType.GlusterFs:
                    return "GlusterFs";
            }
            return null;
        }

        internal static DataStoreType? ParseDataStoreType(this string value)
        {
            switch( value )
            {
                case "AzureBlob":
                    return DataStoreType.AzureBlob;
                case "AzureFile":
                    return DataStoreType.AzureFile;
                case "AzureDataLake":
                    return DataStoreType.AzureDataLake;
                case "AzureSqlDatabase":
                    return DataStoreType.AzureSqlDatabase;
                case "AzurePostgreSql":
                    return DataStoreType.AzurePostgreSql;
                case "DBFS":
                    return DataStoreType.DBFS;
                case "AzureDataLakeGen2":
                    return DataStoreType.AzureDataLakeGen2;
                case "GlusterFs":
                    return DataStoreType.GlusterFs;
            }
            return null;
        }
    }
}
