// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class HistoryConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the HistoryConfiguration class.
        /// </summary>
        public HistoryConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HistoryConfiguration class.
        /// </summary>
        /// <param name="outputCollection">Set to true to collect outputs and
        /// store in run history.</param>
        /// <param name="directoriesToWatch">The list of directories to monitor
        /// and upload files from.</param>
        public HistoryConfiguration(bool? outputCollection = default(bool?), IList<string> directoriesToWatch = default(IList<string>))
        {
            OutputCollection = outputCollection;
            DirectoriesToWatch = directoriesToWatch;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets set to true to collect outputs and store in run
        /// history.
        /// </summary>
        [JsonProperty(PropertyName = "outputCollection")]
        public bool? OutputCollection { get; set; }

        /// <summary>
        /// Gets or sets the list of directories to monitor and upload files
        /// from.
        /// </summary>
        [JsonProperty(PropertyName = "directoriesToWatch")]
        public IList<string> DirectoriesToWatch { get; set; }

    }
}
