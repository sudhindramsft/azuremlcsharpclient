// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DeploymentType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DeploymentType
    {
        [EnumMember(Value = "GRPCRealtimeEndpoint")]
        GRPCRealtimeEndpoint,
        [EnumMember(Value = "HttpRealtimeEndpoint")]
        HttpRealtimeEndpoint,
        [EnumMember(Value = "Batch")]
        Batch
    }
    internal static class DeploymentTypeEnumExtension
    {
        internal static string ToSerializedValue(this DeploymentType? value)
        {
            return value == null ? null : ((DeploymentType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DeploymentType value)
        {
            switch( value )
            {
                case DeploymentType.GRPCRealtimeEndpoint:
                    return "GRPCRealtimeEndpoint";
                case DeploymentType.HttpRealtimeEndpoint:
                    return "HttpRealtimeEndpoint";
                case DeploymentType.Batch:
                    return "Batch";
            }
            return null;
        }

        internal static DeploymentType? ParseDeploymentType(this string value)
        {
            switch( value )
            {
                case "GRPCRealtimeEndpoint":
                    return DeploymentType.GRPCRealtimeEndpoint;
                case "HttpRealtimeEndpoint":
                    return DeploymentType.HttpRealtimeEndpoint;
                case "Batch":
                    return DeploymentType.Batch;
            }
            return null;
        }
    }
}
