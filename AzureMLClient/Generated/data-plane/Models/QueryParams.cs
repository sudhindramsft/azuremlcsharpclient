// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The set of supported filters.
    /// </summary>
    public partial class QueryParams
    {
        /// <summary>
        /// Initializes a new instance of the QueryParams class.
        /// </summary>
        public QueryParams()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryParams class.
        /// </summary>
        /// <param name="filter">Allows for filtering the collection of
        /// resources.
        /// The expression specified is evaluated for each resource in the
        /// collection, and only items where the expression evaluates to true
        /// are included in the response.
        /// See
        /// https://docs.microsoft.com/en-us/azure/search/query-odata-filter-orderby-syntax
        /// for details on the expression syntax.</param>
        /// <param name="continuationToken">The continuation token to use for
        /// getting the next set of resources.</param>
        /// <param name="orderBy">The comma separated list of resource
        /// properties to use for sorting the requested resources.
        /// Optionally, can be followed by either 'asc' or 'desc'</param>
        /// <param name="top">The maximum number of items in the resource
        /// collection to be included in the result.
        /// If not specified, all items are returned.</param>
        public QueryParams(string filter = default(string), string continuationToken = default(string), string orderBy = default(string), int? top = default(int?))
        {
            Filter = filter;
            ContinuationToken = continuationToken;
            OrderBy = orderBy;
            Top = top;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets allows for filtering the collection of resources.
        /// The expression specified is evaluated for each resource in the
        /// collection, and only items where the expression evaluates to true
        /// are included in the response.
        /// See
        /// https://docs.microsoft.com/en-us/azure/search/query-odata-filter-orderby-syntax
        /// for details on the expression syntax.
        /// </summary>
        [JsonProperty(PropertyName = "filter")]
        public string Filter { get; set; }

        /// <summary>
        /// Gets or sets the continuation token to use for getting the next set
        /// of resources.
        /// </summary>
        [JsonProperty(PropertyName = "continuationToken")]
        public string ContinuationToken { get; set; }

        /// <summary>
        /// Gets or sets the comma separated list of resource properties to use
        /// for sorting the requested resources.
        /// Optionally, can be followed by either 'asc' or 'desc'
        /// </summary>
        [JsonProperty(PropertyName = "orderBy")]
        public string OrderBy { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of items in the resource collection
        /// to be included in the result.
        /// If not specified, all items are returned.
        /// </summary>
        [JsonProperty(PropertyName = "top")]
        public int? Top { get; set; }

    }
}
