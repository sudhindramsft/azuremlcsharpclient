// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The request to create an Endpoint in the AKS.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AKSENDPOINT")]
    public partial class CreateEndpointRequest : CreateServiceRequest
    {
        /// <summary>
        /// Initializes a new instance of the CreateEndpointRequest class.
        /// </summary>
        public CreateEndpointRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateEndpointRequest class.
        /// </summary>
        /// <param name="name">The service name.</param>
        /// <param name="description">The description of the service.</param>
        /// <param name="kvTags">The service tag dictionary. Tags are
        /// mutable.</param>
        /// <param name="properties">The service properties dictionary.
        /// Properties are immutable.</param>
        /// <param name="keys">The authentication keys.</param>
        /// <param name="deploymentType">The deployment type for the service.
        /// Possible values include: 'GRPCRealtimeEndpoint',
        /// 'HttpRealtimeEndpoint', 'Batch'</param>
        /// <param name="imageId">The Image Id.</param>
        /// <param name="environmentImageRequest">The Environment, models and
        /// assets needed for inferencing.</param>
        /// <param name="location">The location of the service.</param>
        /// <param name="computeName">The name of the compute resource.</param>
        /// <param name="appInsightsEnabled">Whether or not Application
        /// Insights is enabled.</param>
        /// <param name="authEnabled">Whether or not authentication is
        /// enabled.</param>
        /// <param name="aadAuthEnabled">Whether or not AAD authentication is
        /// enabled.</param>
        /// <param name="namespaceProperty">Kubernetes namespace for the
        /// service.</param>
        /// <param name="variants">The service tag list.</param>
        public CreateEndpointRequest(string name, string description = default(string), IDictionary<string, string> kvTags = default(IDictionary<string, string>), IDictionary<string, string> properties = default(IDictionary<string, string>), AuthKeys keys = default(AuthKeys), DeploymentType? deploymentType = default(DeploymentType?), string imageId = default(string), EnvironmentImageRequest environmentImageRequest = default(EnvironmentImageRequest), string location = default(string), string computeName = default(string), bool? appInsightsEnabled = default(bool?), bool? authEnabled = default(bool?), bool? aadAuthEnabled = default(bool?), string namespaceProperty = default(string), IList<AKSServiceCreateRequest> variants = default(IList<AKSServiceCreateRequest>))
            : base(name, description, kvTags, properties, keys, deploymentType, imageId, environmentImageRequest, location)
        {
            ComputeName = computeName;
            AppInsightsEnabled = appInsightsEnabled;
            AuthEnabled = authEnabled;
            AadAuthEnabled = aadAuthEnabled;
            NamespaceProperty = namespaceProperty;
            Variants = variants;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the compute resource.
        /// </summary>
        [JsonProperty(PropertyName = "computeName")]
        public string ComputeName { get; set; }

        /// <summary>
        /// Gets or sets whether or not Application Insights is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "appInsightsEnabled")]
        public bool? AppInsightsEnabled { get; set; }

        /// <summary>
        /// Gets or sets whether or not authentication is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "authEnabled")]
        public bool? AuthEnabled { get; set; }

        /// <summary>
        /// Gets or sets whether or not AAD authentication is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "aadAuthEnabled")]
        public bool? AadAuthEnabled { get; set; }

        /// <summary>
        /// Gets or sets kubernetes namespace for the service.
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets the service tag list.
        /// </summary>
        [JsonProperty(PropertyName = "variants")]
        public IList<AKSServiceCreateRequest> Variants { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Variants != null)
            {
                foreach (var element in Variants)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
