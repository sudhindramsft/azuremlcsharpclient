// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.MachineLearning.Services
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Operations.
    /// </summary>
    public static partial class OperationsExtensions
    {
            /// <summary>
            /// Get the status of an async operation.
            /// </summary>
            /// <remarks>
            /// Get the status of an async operation by operation id.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The Azure Subscription ID.
            /// </param>
            /// <param name='resourceGroup'>
            /// The Name of the resource group in which the workspace is located.
            /// </param>
            /// <param name='workspace'>
            /// The name of the workspace.
            /// </param>
            /// <param name='id'>
            /// The operation id.
            /// </param>
            public static AsyncOperationStatus Get(this IOperations operations, System.Guid subscriptionId, string resourceGroup, string workspace, string id)
            {
                return operations.GetAsync(subscriptionId, resourceGroup, workspace, id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the status of an async operation.
            /// </summary>
            /// <remarks>
            /// Get the status of an async operation by operation id.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The Azure Subscription ID.
            /// </param>
            /// <param name='resourceGroup'>
            /// The Name of the resource group in which the workspace is located.
            /// </param>
            /// <param name='workspace'>
            /// The name of the workspace.
            /// </param>
            /// <param name='id'>
            /// The operation id.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AsyncOperationStatus> GetAsync(this IOperations operations, System.Guid subscriptionId, string resourceGroup, string workspace, string id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, resourceGroup, workspace, id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
